var searchIndex = new Map(JSON.parse('[\
["databricks_rust_catalog",{"doc":"","t":"CHCCCCFNNNNNONNNNNNNNNNNNOFFNOOOOONNNNNNNNNNNNNNNNNNNNONNNONNNNONNNNNNNNNNNNFFFFFFFNNNNNNNOONNNNNNNNNNNNNNOOOOOOOONNNNNNNNNNNNNNOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNOOOOOOONNNNOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNPPPPPFFFPPPGPPPFPNNNNNONHNNNNNNNNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNHNNNNNNNNNNNOHONNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNONNNNN","n":["data","main","api_client","delta","metastore","permissions","APIClient","__clone_box","borrow","borrow_mut","clone","clone_into","db_token","deref","deref_mut","drop","fetch","from","init","into","to_owned","try_from","try_into","type_id","vzip","workspace_name","AzureDataLakeGen2Options","DeltaLakeManager","__clone_box","api_client","azure_client_id","azure_client_secret","azure_storage_account_name","azure_tenant_id","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","fmt","from","from","init","init","into","into","metastore_client","new","new","parallel_read_table_as_bytes","principal","read_delta_table_as_datafusion","read_delta_table_as_lazy_polars","read_delta_table_as_polars","read_table_as_bytes","storage_credentials","to_hash_map","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","write_datafusion_to_delta","write_polars_to_delta_table","Catalog","CatalogResponse","Client","Schema","SchemaResponse","Table","TableResponse","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","access_point","api_client","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","browse_only","browse_only","browse_only","catalog_name","catalog_name","catalog_type","catalog_type","catalogs","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","comment","comment","comment","connection_name","created_at","created_at","created_at","created_by","created_by","created_by","data_access_configuration_id","data_source_format","deleted_at","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","enable_predictive_optimization","enable_predictive_optimization","enable_predictive_optimization","fetch_catalogs","fetch_schemas","fetch_tables","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","full_name","full_name","full_name","get_catalog","get_schema","get_table","init","init","init","init","init","init","init","into","into","into","into","into","into","into","isolation_mode","metastore_id","metastore_id","metastore_id","name","name","name","new","new","new","new","owner","owner","owner","pipeline_id","provider_name","schema_id","schema_name","schemas","securable_kind","securable_type","share_name","sql_path","storage_credential_name","storage_location","storage_location","storage_location","storage_root","storage_root","table_id","table_type","tables","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updated_at","updated_at","updated_at","updated_by","updated_by","updated_by","view_definition","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Catalog","Connection","ExternalLocation","Function","Metastore","ObjectOwnerResponse","PrivilegeAssignment","PrivilegeAssignmentsResponse","Provider","Recipient","Schema","SecurableType","Share","StorageCredential","Table","User","Volume","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","active","add_assignment","authenticate_user","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_read","can_write","check_permissions","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","display_name","drop","drop","drop","drop","drop","fetch_permissions","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","full_name","get_object_owner","id","init","init","init","init","init","into","into","into","into","into","new","object_name","object_type","owner","principal","privilege_assignments","privileges","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user_name","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"databricks_rust_catalog"],[2,"databricks_rust_catalog::data"],[6,"databricks_rust_catalog::data::api_client"],[26,"databricks_rust_catalog::data::delta"],[76,"databricks_rust_catalog::data::metastore"],[281,"databricks_rust_catalog::data::permissions"],[409,"core::error"],[410,"alloc::boxed"],[411,"core::result"],[412,"dyn_clone::sealed"],[413,"reqwest::async_impl::response"],[414,"reqwest::error"],[415,"core::any"],[416,"serde::de"],[417,"core::fmt"],[418,"core::fmt"],[419,"bytes::bytes"],[420,"alloc::vec"],[421,"datafusion::dataframe"],[422,"polars_lazy::frame"],[423,"polars_core::frame"],[424,"std::collections::hash::map"],[425,"core::option"]],"d":["","","","","","","Represents an API client for making HTTP requests.","","","","","","The database token used for authorization.","","","","Fetches data from the specified URL asynchronously.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","The name of the workspace associated with the API client.","Struct representing options for Azure Data Lake Gen2 Refer …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Creates the delta lake reader struct","Creates a new instance of <code>AzureDataLakeGen2Options</code>","Reads a delta table in a parallel fashion","","If the user has permission to read the table, then this …","","If the user has permission to read the table, then this …","Reads a delta table in a serial fashion","","Converts the <code>AzureDataLakeGen2Options</code> instance to a <code>HashMap</code>","","","","","","","","","","If the user has permission to read the table, then this …","","","","","","Represents a response containing schemas.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","List all catalogs in a Databricks’ Unity Catalog …","List schemas fpr a given catalog in a Databricks’ Unity …","List all tables for a given schema/catalog in a Databricks…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Get an individual catalog object","Get an individual schema object","Get an individual table object …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","Creates metastore client struct ","","Constructs a new <code>SchemaResponse</code> with the provided vector …","Constructs a new <code>TableResponse</code> with the provided vector of …","","","","","","","","Optional vector of schemas.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enum representing various Unity Catalog (UC) securable …","","","","","","","","","","","","","Returns User Struct containing the princpal used for …","","","","","","","","","","","Checks if a principal can read a given object from Unity …","Checks if a principal can modify a given object from Unity …","Checks if a principal has the specified permissions on a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetches permissions for a given object from Unity Catalog …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Converts a string slice to a <code>SecurableType</code> enum Returns an …","","Fetches the owner of a specified object from Unity Catalog …","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Converts a <code>SecurableType</code> enum to a string","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,12,17,12,12,12,12,17,12,17,12,12,12,17,12,17,12,12,17,12,12,17,12,17,12,17,12,17,17,12,17,17,17,17,17,17,17,12,12,17,12,17,12,17,12,17,12,17,17,0,0,0,0,0,0,0,25,26,27,28,29,30,31,31,25,25,26,27,28,29,30,31,25,26,27,28,29,30,31,27,29,31,29,31,27,29,26,25,26,27,28,29,30,31,25,26,27,28,29,30,31,27,29,31,27,27,29,31,27,29,31,31,31,31,25,26,27,28,29,30,31,25,26,27,28,29,30,31,26,27,28,29,30,31,25,26,27,28,29,30,31,27,29,31,25,25,25,26,27,28,29,30,31,25,26,27,28,29,30,31,27,29,31,25,25,25,25,26,27,28,29,30,31,25,26,27,28,29,30,31,27,27,29,31,27,29,31,25,26,28,30,27,29,31,31,27,29,31,28,27,27,27,31,31,27,29,31,27,29,31,31,30,25,26,27,28,29,30,31,25,26,27,28,29,30,31,25,26,27,28,29,30,31,25,26,27,28,29,30,31,27,29,31,27,29,31,31,25,26,27,28,29,30,31,34,34,34,34,34,0,0,0,34,34,34,0,34,34,34,0,34,33,35,36,37,34,37,33,0,33,35,36,37,34,33,35,36,37,34,0,0,0,33,35,36,37,34,33,35,36,37,34,33,35,36,37,34,33,35,36,37,34,33,35,36,37,34,37,33,35,36,37,34,0,33,35,36,37,34,33,35,36,37,34,34,35,0,37,33,35,36,37,34,33,35,36,37,34,33,36,36,35,36,33,36,33,35,36,37,34,34,33,35,36,37,34,33,35,36,37,34,33,35,36,37,34,37,33,35,36,37,34],"f":"`{{}{{h{b{f{d}}}}}}`````{{cj}b{}}{ce{}{}}0{ll}{{ce}b{}{}}`{nc{}}0{nb}{{lA`}{{h{AbAd}}}}{cc{}}{{}n}77{c{{h{e}}}{}{}}0{cAf{}}9```:`````9999{AhAh}87777{c{{h{Ah}}}Aj}77{{AhAl}An}6655<<`{{B`B`B`}{{h{Bb{f{d}}}}}}{{B`B`B`B`}Ah}{{BbA`}{{h{{Bf{Bd}}{f{d}}}}}}`{{BbA`}{{h{Bh{f{d}}}}}}{{BbA`}{{h{Bj{f{d}}}}}}{{BbA`Bl}{{h{Bn{f{d}}}}}}3`{Ah{{C`{B`B`}}}}{ce{}{}}<<<<;;00{{BbA`Bh}{{h{b{f{d}}}}}}{{BbA`}{{h{b{f{d}}}}}}```````{{cj}b{}}000000``33333333333333````````{CbCb}{CdCd}{CfCf}{ChCh}{CjCj}{ClCl}{CnCn}{{ce}b{}{}}000000`````````````{nc{}}0000000000000{c{{h{Cd}}}Aj}{c{{h{Cf}}}Aj}{c{{h{Ch}}}Aj}{c{{h{Cj}}}Aj}{c{{h{Cl}}}Aj}{c{{h{Cn}}}Aj}{nb}000000```{Cb{{h{CdAd}}}}{{CbB`{D`{n}}}{{h{ChAd}}}}{{CbB`B`{D`{n}}}{{h{ClAd}}}}{{CdAl}An}{{CfAl}An}{{ChAl}An}{{CjAl}An}{{ClAl}An}{{CnAl}An}{cc{}}000000```{{CbB`}{{h{CfAd}}}}{{CbB`}{{h{CjAd}}}}{{CbA`}{{h{CnAd}}}}{{}n}000000{ce{}{}}000000```````{{B`B`}Cb}{{{Bf{Cf}}}Cd}{{{Bf{Cj}}}Ch}{{{Bf{Cn}}}Cl}`````````````````````4444444{c{{h{e}}}{}{}}0000000000000{cAf{}}000000```````6666666`````````````````{{cj}b{}}0000`{{DbDbA`Dd}b}{{lA`A`A`}{{h{BlAd}}}}9999999999{{lA`A`}{{h{BlAd}}}}0{{lDdA`A`{Bf{A`}}}{{h{BlAd}}}}{DbDb}{DfDf}{DhDh}{DjDj}{DdDd}{{ce}b{}{}}0000{nc{}}000000000{c{{h{Db}}}Aj}{c{{h{Df}}}Aj}{c{{h{Dh}}}Aj}{c{{h{Dj}}}Aj}{c{{h{Dd}}}Aj}`{nb}0000{{lDdA`A`}{{h{DbAd}}}}{{DbAl}An}{{DfAl}An}{{DhAl}An}{{DjAl}An}{{DdAl}An}{cc{}}0000{A`{{h{Ddc}}}{}}`{{lDdA`}{{h{DfAd}}}}`{{}n}0000{ce{}{}}0000{{}Db}``````11111{DdB`}{c{{h{e}}}{}{}}000000000{cAf{}}0000`44444","c":[],"p":[[1,"unit"],[10,"Error",409],[5,"Box",410],[6,"Result",411],[5,"Private",412],[5,"APIClient",6],[1,"usize"],[1,"str"],[5,"Response",413],[5,"Error",414],[5,"TypeId",415],[5,"AzureDataLakeGen2Options",26],[10,"Deserializer",416],[5,"Formatter",417],[8,"Result",417],[5,"String",418],[5,"DeltaLakeManager",26],[5,"Bytes",419],[5,"Vec",420],[5,"DataFrame",421],[5,"LazyFrame",422],[1,"bool"],[5,"DataFrame",423],[5,"HashMap",424],[5,"Client",76],[5,"CatalogResponse",76],[5,"Catalog",76],[5,"SchemaResponse",76],[5,"Schema",76],[5,"TableResponse",76],[5,"Table",76],[6,"Option",425],[5,"PrivilegeAssignmentsResponse",281],[6,"SecurableType",281],[5,"ObjectOwnerResponse",281],[5,"PrivilegeAssignment",281],[5,"User",281]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
